{"version":3,"file":"editor.js","mappings":"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","sources":["webpack:///external window [\"wp\",\"components\"]","webpack:///external window [\"wp\",\"data\"]","webpack:///external window [\"wp\",\"editor\"]","webpack:///external window [\"wp\",\"element\"]","webpack:///external window [\"wp\",\"plugins\"]","webpack:///external window \"React\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./assets/js/editor.js"],"sourcesContent":["module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editor\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"React\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerPlugin } from '@wordpress/plugins';\nimport { PluginDocumentSettingPanel, PluginPostStatusInfo } from '@wordpress/editor';\nimport { PanelBody, SelectControl, Button, TextControl } from '@wordpress/components';\nimport { useEffect } from 'react';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\n\nconst HideElements = ({ targetStyle }) => {\n    useEffect(() => {\n        const style = document.createElement('style');\n        style.textContent = `\n             ${targetStyle} {\n                display: none !important;\n            }\n        `;\n        document.head.appendChild(style);\n        return () => {\n            document.head.removeChild(style); // Clean up on unmount\n        };\n    }, []);\n    return null;\n};\n\nconst PluginPostStatusInfoTest = () => (\n    <PluginPostStatusInfo>\n        <p>Post Status Info SlotFill</p>\n    </PluginPostStatusInfo>\n);\n\n// registerPlugin('post-status-info-test', { render: PluginPostStatusInfoTest });\n\n['.editor-post-panel__section.editor-post-summary', '.editor-document-tools__inserter-toggle'].forEach((targetStyle, index) => {\n    registerPlugin(`hidden-control-${index}`, { render: () => <HideElements targetStyle={targetStyle} /> });\n});\n\nconst ContentSettingsPanel = () => {\n    const [authorModal, setAuthorModal] = useState(false);\n\n    const { meta } = useSelect(select => ({\n        meta: select('core/editor').getEditedPostAttribute('meta') || {},\n    }));\n\n    const { editPost } = useDispatch('core/editor');\n\n    const updateMeta = (key, value) => {\n        editPost({ meta: { [key]: value } });\n    };\n\n    return (\n        <PluginDocumentSettingPanel\n            name=\"content-settings\"\n            title=\"Content Settings\"\n            className=\"content-manager-panel\"\n        >\n            <PanelBody title=\"Content Type\" initialOpen={true}>\n                <SelectControl\n                    value={meta.content_type || 'article'}\n                    options={[\n                        { label: 'Article', value: 'article' },\n                        { label: 'Video', value: 'video' },\n                    ]}\n                    onChange={(value) => updateMeta('content_type', value)}\n                />\n            </PanelBody>\n\n            <PanelBody title=\"Authors\" initialOpen={true}>\n                <div className=\"authors-section\">\n                    <Button\n                        variant=\"secondary\"\n                        onClick={() => setAuthorModal(true)}\n                    >\n                        Manage Authors\n                    </Button>\n                    <div className=\"authors-list\">\n                        {(meta.content_authors || []).map((author, index) => (\n                            <div key={index} className=\"author-item\">\n                                {author.name} - {author.title}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </PanelBody>\n\n            <PanelBody title=\"Target Audience\" initialOpen={true}>\n                <SelectControl\n                    value={meta.target_audience || 'group1'}\n                    options={[\n                        { label: 'Group 1', value: 'group1' },\n                        { label: 'Group 2', value: 'group2' },\n                        { label: 'Group 3', value: 'group3' },\n                        { label: 'Group 4', value: 'group4' },\n                    ]}\n                    onChange={(value) => updateMeta('target_audience', value)}\n                />\n            </PanelBody>\n\n            <PanelBody title=\"Reading Time\">\n                <div>Estimated: {meta.estimated_read_time || 10} mins read</div>\n            </PanelBody>\n\n            {authorModal && <AuthorModal onClose={() => setAuthorModal(false)} />}\n        </PluginDocumentSettingPanel>\n    );\n};\n\nconst AuthorModal = ({ onClose }) => {\n    // Author management modal component\n    return (\n        <div className=\"author-modal\">\n            {/* Modal content */}\n        </div>\n    );\n};\n\nregisterPlugin('content-manager', {\n    render: ContentSettingsPanel,\n});"],"names":["registerPlugin","PluginDocumentSettingPanel","PluginPostStatusInfo","PanelBody","SelectControl","Button","TextControl","useEffect","useSelect","useDispatch","useState","HideElements","targetStyle","style","document","createElement","textContent","head","appendChild","removeChild","PluginPostStatusInfoTest","forEach","index","render","ContentSettingsPanel","authorModal","setAuthorModal","meta","select","getEditedPostAttribute","editPost","updateMeta","key","value","name","title","className","initialOpen","content_type","options","label","onChange","variant","onClick","content_authors","map","author","target_audience","estimated_read_time","AuthorModal","onClose"],"sourceRoot":""}